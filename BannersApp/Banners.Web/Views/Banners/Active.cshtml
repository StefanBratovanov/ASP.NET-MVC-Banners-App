@using PagedList.Mvc
@model PagedList.IPagedList<Banners.Web.Models.ActiveBannerViewModel>

@{
    ViewBag.Title = "Acive Banners";
}

<div class="active">
    <h2>@ViewBag.Title</h2>
</div>

<div class="row">
    @Html.DisplayFor(x => x)
</div>

<div>
    @Html.PagedListPager(Model, page => Url.Action("Active", new { page }))
</div>

<script>
    $(function () {
        setInterval(function () {
            $(".col-md-3").shuffleArray();
        }, 10000);
    });

    $.fn.shuffleArray = function () {
        var elements = this.get();
        var shuffled = [];
        var placeholders = [];

        for (var i = 0; i < elements.length; i++) {
            var randumberomN;
            do {
                randumberomN = Math.floor(Math.random() * elements.length);
                var keys = Object.keys(shuffled);
                if (randumberomN === i
                    && !contains(keys, randumberomN)
                    && shuffled.length === elements.length - 1) {
                    break;
                }


            } while (randumberomN === i || contains(keys, randumberomN))

            shuffled[randumberomN] = elements[i];
        }

        function contains(array, element) {
            var i = array.length;
            while (i--) {
                if (array[i] == element) {
                    return true;
                }
            }
            return false;
        }

        // replace all elements with a plcaceholder
        for (var i = 0; i < elements.length; i++) {
            var placeholder = document.createTextNode('');
            findAndReplace(elements[i], placeholder);
            placeholders.push(placeholder);
        }

        // replace the placeholders with the shuffled elements
        for (var i = 0; i < elements.length; i++) {
            findAndReplace(placeholders[i], shuffled[i]);
        }

        return $(shuffled);
    }

    function findAndReplace(find, replace) {
        find.parentNode.replaceChild(replace, find);
    }
</script>